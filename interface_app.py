import streamlit as st
import openai
import json

# --- Configura√ß√£o da P√°gina e Chave da API ---
st.set_page_config(page_title="Rapport.AI", page_icon="üß†")

# ‚Üì‚Üì‚Üì COLOQUE SUA CHAVE DA API DA OPENAI AQUI DENTRO DAS ASPAS ‚Üì‚Üì‚Üì
OPENAI_API_KEY = st.secrets["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"]

# --- A L√≥gica Principal (O "C√©rebro") ---
PROMPT_MESTRE = """
Voc√™ √© o 'Rapport.AI', um assistente de comunica√ß√£o para aplicativos de relacionamento...
(O resto do prompt mestre que voc√™ j√° tem vai aqui, n√£o precisa colar de novo, o c√≥digo que voc√™ j√° tem est√° completo)
"""
# ... (cole o resto do c√≥digo que te passei antes, da fun√ß√£o gerar_sugestao_resposta at√© o final) ...
# Se precisar, aqui est√° ele completo de novo:

def gerar_sugestao_resposta(bio_match, historico_conversa, ultima_mensagem_match):
    if not OPENAI_API_KEY or OPENAI_API_KEY == "SUA_CHAVE_API_AQUI":
        return {"error": "Chave da API da OpenAI n√£o configurada. Por favor, insira a chave no c√≥digo acima."}
    
    client = openai.OpenAI(api_key=OPENAI_API_KEY)
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            response_format={"type": "json_object"},
            messages=[
                {"role": "system", "content": PROMPT_MESTRE},
                {"role": "user", "content": f"""
                CONTEXTO:
                - Bio do Match: "{bio_match}"
                - Hist√≥rico da Conversa: "{historico_conversa}"
                - √öltima Mensagem do Match para eu responder: "{ultima_mensagem_match}"
                Por favor, gere as sugest√µes de resposta no formato JSON solicitado.
                """}
            ]
        )
        sugestoes_json = json.loads(response.choices[0].message.content)
        return sugestoes_json
    except Exception as e:
        return {"error": f"Ocorreu um erro ao contatar a API da OpenAI: {e}"}

# --- A Interface Gr√°fica com Streamlit ---
st.title("üß† Rapport.AI")
st.caption("Seu assistente de IA para criar conex√µes genu√≠nas")

st.header("Insira os dados da conversa:")

bio_do_match = st.text_area("Bio do Match", "Amante de viagens, viciada em caf√© e tentando aprender a tocar viol√£o. N√£o curto papo furado.")
historico_da_conversa = st.text_area("Hist√≥rico da Conversa", "Eu: Oi! Vi que vc t√° aprendendo viol√£o. J√° conseguiu tirar alguma m√∫sica ou s√≥ na parte dos dedos doendo? haha\nMatch: Hahaha por enquanto mais na parte dos dedos doendo mesmo! Mas j√° arrisco uns acordes de Legi√£o Urbana.")
ultima_mensagem_do_match = st.text_input("√öltima Mensagem do Match (para voc√™ responder)", "Meu final de semana foi √≥timo, descobri uma cafeteria nova no centro que tem um bolo de cenoura incr√≠vel.")

if st.button("Gerar Sugest√µes com IA"):
    with st.spinner('Analisando a conversa e gerando sugest√µes...'):
        sugestoes = gerar_sugestao_resposta(bio_do_match, historico_da_conversa, ultima_mensagem_do_match)

    st.divider()

    if "error" in sugestoes:
        st.error(sugestoes["error"])
    else:
        st.header("An√°lise do Rapport.AI")
        interesse = sugestoes.get('termometro_de_interesse', 0)
        st.metric(label="Term√¥metro do Interesse", value=f"{interesse}/100")
        st.progress(interesse)
        st.info(f"**An√°lise de Vibe:** {sugestoes.get('analise_de_vibe', 'N/A')}")
        st.header("Suas Op√ß√µes de Resposta")
        col1, col2, col3 = st.columns(3)
        with col1:
            st.subheader("ü§ù Aprofundar Conex√£o")
            st.write(sugestoes.get('sugestoes', {}).get('aprofundar_conexao', 'N/A'))
        with col2:
            st.subheader("üî• Manter Interesse")
            st.write(sugestoes.get('sugestoes', {}).get('manter_interesse', 'N/A'))
        with col3:
            st.subheader("‚òï Ponte para o Encontro")
            st.write(sugestoes.get('sugestoes', {}).get('ponte_para_encontro', 'N/A'))